FROM ubuntu:16.04

MAINTAINER Eiji Uchibe <uchibe@atr.jp>

############################################
# OpenAI Gym
############################################
RUN apt-get update --fix-missing \
    && apt-get install -y python-numpy python3-numpy \
    python-dev python3-dev cmake \
    zlib1g-dev libjpeg-dev xvfb libav-tools xorg-dev \
    python-opengl python3-opengl python-pip python3-pip \
    libboost-all-dev libsdl2-dev swig \
    python-pip python3-pip

RUN pip install --upgrade pip
RUN pip3 install --upgrade pip
RUN pip3 install 'gym[all]'

############################################
# OpenCV
# http://www.pyimagesearch.com/2016/10/24/ubuntu-16-04-how-to-install-opencv/
############################################
RUN apt-get update \
    && apt-get install -y build-essential cmake pkg-config \
       libjpeg8-dev libtiff5-dev libjasper-dev libpng12-dev \
       libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
       libxvidcore-dev libx264-dev libgtk-3-dev \
       libatlas-base-dev gfortran wget unzip
WORKDIR /opt
RUN wget -O opencv.zip https://github.com/opencv/opencv/archive/3.1.0.zip \
    && wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/3.1.0.zip \
    && unzip opencv.zip \
    && unzip opencv_contrib.zip
RUN mkdir -p /opt/opencv-3.1.0/build \
    && cd /opt/opencv-3.1.0/build \
    && cmake -D CMAKE_BUILD_TYPE=RELEASE \
       -D CMAKE_INSTALL_PREFIX=/usr/local \
       -D INSTALL_PYTHON_EXAMPLES=OFF \
       -D INSTALL_C_EXAMPLES=OFF \
       -D OPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib-3.1.0/modules \
       -D BUILD_EXAMPLES=OFF .. \
    && make \
    && make install \
    && make clean

############################################
# OpenAI Baselines
# (2017/07/22) PPO and TRPO are not installed by
#     pip3 install baselines
############################################
RUN apt-get update \
    && apt-get install -y git 
RUN git clone --depth 1 https://github.com/openai/baselines.git \
    && pip3 install -e baselines
# RUN pip3 install mpi4py

############################################
# Roboschool
############################################
RUN apt-get update \
    && apt-get install -y git cmake ffmpeg pkg-config \
    qtbase5-dev libqt5opengl5-dev libassimp-dev \
    libpython3.5-dev libboost-python-dev libtinyxml-dev

RUN git clone --depth 1 https://github.com/olegklimov/bullet3 -b roboschool_self_collision \
    && git clone --depth 1 https://github.com/openai/roboschool
# export ROBOSCHOOL_PATH=/opt/roboschool
ENV ROBOSCHOOL_PATH /opt/roboschool
RUN mkdir -p /opt/bullet3/build \
    && cd /opt/bullet3/build \
    && cmake -DBUILD_SHARED_LIBS=ON -DUSE_DOUBLE_PRECISION=1 \
       -DCMAKE_INSTALL_PREFIX:PATH=${ROBOSCHOOL_PATH}/roboschool/cpp-household/bullet_local_install \
       -DBUILD_CPU_DEMOS=OFF -DBUILD_BULLET2_DEMOS=OFF \
       -DBUILD_EXTRAS=OFF  -DBUILD_UNIT_TESTS=OFF \
       -DBUILD_CLSOCKET=OFF -DBUILD_ENET=OFF \
       -DBUILD_OPENGL3_DEMOS=OFF .. \
    && make \
    && make install

RUN pip3 install -e ${ROBOSCHOOL_PATH}

############################################
# locate
############################################
RUN apt-get update \
    && apt-get install -y mlocate \
    && updatedb

############################################
# Create a local user account
############################################
RUN adduser docker
ENV HOME /home/docker
USER docker
WORKDIR ${HOME}

############################################
# Python3.5 as default (if you need)
############################################
#RUN apt-get update --fix-missing \
#    && apt-get install -y python python2.7 python3.5
#RUN mv /usr/bin/python /usr/bin/python.bak \
#    && update-alternatives --install /usr/bin/python python /usr/bin/python2.7 2 \
#    && update-alternatives --install /usr/bin/python python /usr/bin/python3.5 1 \
#    && update-alternatives --set python /usr/bin/python3.5


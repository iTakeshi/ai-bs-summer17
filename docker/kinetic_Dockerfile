FROM ubuntu:16.04

MAINTAINER Eiji Uchibe <uchibe@atr.jp>

############################################
# General setup
############################################
# Basic utilities
RUN apt-get -y update \
    && apt-get install -y git screen tree sudo ssh synaptic \
    locales lsb-release

############################################
# ROS
# http://wiki.ros.org/kinetic/Installation/Ubuntu
############################################
# Setup environment
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8

# Set up sources.list
RUN echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list

# Set up your keys
RUN apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116

# Installation
RUN apt-get update && apt-get install -y ros-kinetic-desktop-full
RUN apt-get install -y python-rosdep python-rosinstall python-vcstools

# bootstrap rosdep
# RUN rosdep init \
#    && rosdep update

# RUN echo "source /opt/ros/indigo/setup.bash" >> ~/.bashrc
# ENV BASH_ENV ~/.bashrc

## install MAVProxy
# RUN pip install future empy
# RUN apt-get install -y libxml2-dev libxslt1-dev libtool automake autoconf libexpat1-dev
# RUN pip install pymavlink catkin_pkg rospkg
# RUN pip install MAVProxy==1.5.2

## Install ArUco
# ENV PKG_CONFIG_PATH /opt/ros/kinetic/lib/pkgconfig
# ENV OpenCV_DIR /opt/ros/kinetic/share/OpenCV-3.2.0-dev
# WORKDIR /root
# RUN wget https://sourceforge.net/projects/aruco/files/OldVersions/aruco-1.3.0.tgz \
#   && tar xvfz aruco-1.3.0.tgz
# COPY docker/aruco*.cpp /root/aruco-1.3.0/utils/
# RUN mkdir -p ~/aruco-1.3.0/build \
#   && cd ~/aruco-1.3.0/build \
#   && cmake .. \
#   && make \
#   && make install

# Install APM/Ardupilot
# RUN mkdir -p ~/simulation \
#   && cd ~/simulation \
#   && git clone --depth 1 https://github.com/erlerobot/ardupilot -b gazebo \
#   && git clone --depth 1 git://github.com/tridge/jsbsim.git \
#   && cd jsbsim \
#   && ./autogen.sh --enable-libraries \
#   && make \
#   && make install

# Create ROS workspace
# RUN pip install vcstool catkin_pkg rospkg
# ENV BASH_ENV /opt/ros/kinetic/setup.bash
# /bin/bash -c "source /opt/ros/kinetic/setup.bash \
# RUN /bin/bash -c "mkdir -p ~/simulation/catkin_ws/src \
#   && cd ~/simulation/catkin_ws/src \
#   && catkin_init_workspace \
#   && cd ~/simulation/catkin_ws \
#   && catkin_make"

  
# WORKDIR /root/simulation/catkin_ws/src
# RUN git clone --depth 1 https://github.com/erlerobot/ardupilot_sitl_gazebo_plugin \
#   && git clone --depth 1 https://github.com/tu-darmstadt-ros-pkg/hector_gazebo/ \
#   && git clone --depth 1 https://github.com/erlerobot/rotors_simulator -b sonar_plugin \
#   && git clone --depth 1 https://github.com/PX4/mav_comm.git \
#   && git clone --depth 1 https://github.com/ethz-asl/glog_catkin.git \
#   && git clone --depth 1 https://github.com/catkin/catkin_simple.git \
#   && git clone --depth 1 https://github.com/erlerobot/mavros.git \
#   && git clone --depth 1 https://github.com/ros-simulation/gazebo_ros_pkgs.git -b kinetic-devel \
#   && git clone --depth 1 https://github.com/ros-drivers/driver_common.git \
#   && git clone --depth 1 https://github.com/erlerobot/gazebo_cpp_examples \
#   && git clone --depth 1 https://github.com/erlerobot/gazebo_python_examples

# RUN /bin/bash -c "cd ~/simulation/catkin_ws \
#   && source devel/setup.bash \
#   && catkin_make --pkg driver_base mav_msgs mavros_msgs gazebo_msgs \
#   && source devel/setup.bash \
#   && catkin_make -j 4"

# ENV BASH_ENV ~/.bashrc

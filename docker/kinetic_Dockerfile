FROM osrf/ros:kinetic-desktop-full

MAINTAINER Eiji Uchibe <uchibe@atr.jp>

############################################
# ROS Kinetic
#   Turtlebot
#   http://answers.ros.org/question/246015/installing-utrtlebot-on-ros-kinetic/
############################################
RUN apt-get update && apt-get install -y \
      ros-kinetic-librealsense ros-kinetic-realsense-camera \
      ros-kinetic-turtlebot ros-kinetic-turtlebot-gazebo \
      python-rosinstall python-rosinstall-generator \
      python-wstool \
      build-essential git \
    && apt-get clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*

RUN echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc
ENV BASH_ENV ~/.bashrc

############################################
# Tensorflow, Theano and Keras
# OpenAI Gym
############################################
RUN apt-get update && apt-get install -y \
      python-numpy python-matplotlib python-dev \
      python-opengl python-pip \
      cmake zlib1g-dev libjpeg-dev xvfb libav-tools \
      xorg-dev libboost-all-dev libsdl2-dev swig \
      gfortran python-skimage psmisc \
    && apt-get clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*

RUN pip install --upgrade pip \
    && pip install h5py tensorflow Theano keras 'gym[all]'

############################################
# Gazebo
############################################
# setup environment
EXPOSE 11345

# Install additional dependencies
RUN apt-get install -y ros-kinetic-cv-bridge \
    ros-kinetic-robot-state-publisher

############################################
# Gym-Gazebo
############################################
RUN apt-get update \
    && apt-get install -y git mercurial \
    libsdl-image1.2-dev libspnav-dev libtbb-dev \
    libtbb2 libusb-dev libftdi-dev \
    pyqt4-dev-tools python-vcstool python-pip \
    g++ ccache realpath \
    libopencv-dev libtool libtool-bin libexpat1-dev libtinyxml2-dev \
    automake autoconf gawk psmisc

RUN apt-get update \
    && apt-get install -y ros-kinetic-bfl \
    ros-kinetic-mavlink ros-kinetic-octomap-msgs \
    ros-kinetic-octomap-ros \
    ros-kinetic-joy ros-kinetic-geodesy \
    ros-kinetic-control-toolbox \
    ros-kinetic-pluginlib \
    ros-kinetic-navigation \
    ros-kinetic-trajectory-msgs \
    ros-kinetic-control-msgs \
    ros-kinetic-std-srvs \
    ros-kinetic-nodelet \
    ros-kinetic-urdf \
    ros-kinetic-rviz \
    ros-kinetic-kdl-conversions \
    ros-kinetic-eigen-conversions \
    ros-kinetic-tf2-sensor-msgs \
    ros-kinetic-pcl-ros 

#RUN easy_install numpy
#RUN easy_install --upgrade numpy
#RUN pip install --upgrade matplotlib
RUN pip2 install pymavlink MAVProxy catkin_pkg --upgrade

# Install Sophus
WORKDIR /opt
RUN git clone --depth 1 https://github.com/stonier/sophus -b indigo \
    && mkdir -p sophus/build \
    && cd sophus/build \
    && cmake .. \
    && make \
    && make install

# Install APM/Ardupilot
RUN mkdir apm \
    && cd apm \
    && git clone --depth 1 https://github.com/erlerobot/ardupilot.git -b gazebo_udp \
    && git clone --depth 1 https://github.com/tridge/jsbsim.git \
    && cd jsbsim \
    && ./autogen.sh --enable-libraries \
    && make \
    && make install

# Download and install gym-gazebo
RUN git clone --depth 1 https://github.com/erlerobot/gym-gazebo.git \
    && cd gym-gazebo \
    && pip install -e .

# Install dependencies
RUN apt-get update \
    && apt-get install -y libbluetooth-dev libcwiid1 \
    libcwiid-dev lswm wmgui wminput
ADD docker/kinetic_gazebo.repos /tmp/gazebo.repos

ENV HOME /root

RUN /bin/bash -c "source /opt/ros/kinetic/setup.bash \
    && mkdir -p ${HOME}/catkin_ws/src \
    && cd ${HOME}/catkin_ws/src \
    && catkin_init_workspace \
    && cd .. \
    && catkin_make"
RUN /bin/bash -c "cd ${HOME}/catkin_ws/src \
    && vcs import < /tmp/gazebo.repos"
#RUN apt-get install -y siv-dev python-qt4-dev python-sip-dev pyqt4-dev-tools
#RUN /bin/bash -c "source /opt/ros/kinetic/setup.bash \
#   && cd ${HOME}/catkin_ws \
#    && catkin_make --pkg mav_msgs \
#    && source devel/setup.bash \
#    && catkin_make -j 1"


############################################
# locate
############################################
RUN apt-get update \
    && apt-get install -y mlocate \
    && updatedb
